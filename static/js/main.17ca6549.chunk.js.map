{"version":3,"sources":["navigation.js","components/Header/index.js","components/Header/Header.js","constants.js","containers/Homepage/Homepage.js","state/ducks/books/action.js","state/ducks/books/types.js","containers/Homepage/index.js","containers/AddBook/AddBook.js","routes.js","components/Main/Main.js","components/Main/index.js","components/MainLayout/index.js","components/MainLayout/MainLayout.js","components/AddBook/AddBookForm.js","components/AddBook/index.js","components/Homepage/BookStyles.js","components/Homepage/Book.js","components/Homepage/Books.js","components/Homepage/FilterSortBarStyles.js","components/Homepage/FilterSortBar.js","App.js","serviceWorker.js","state/ducks/books/reducers.js","state/ducks/books/index.js","state/store.js","history.js","index.js"],"names":["navigation","left","title","to","right","Header","useState","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","tag","Link","NavbarToggler","onClick","Collapse","navbar","Nav","className","map","nav","NavItem","NavLink","NavbarText","categories","ratings","statuses","apiHost","Homepage","props","this","getBooks","loading","allBooks","books","filteredBooks","filter","book","category","searchTerm","toLowerCase","indexOf","author","sortedBooks","sortTerm","sort","book1","book2","console","log","parseInt","length","items","Container","React","Component","mapDispatchToProps","dispatch","type","axios","get","then","result","payload","data","catch","err","connect","state","AddBook","id","routerProps","match","params","setState","isEdit","componentProps","Row","Col","xs","routes","path","exact","component","Main","route","Comp","MainLayout","document","Children","children","validationSchema","Yup","shape","required","review","min","addBook","values","history","post","push","editBook","put","AddBookForm","withRouter","initialValues","url","description","rating","imageUrl","status","onSubmit","enableReinitialize","errors","handleChange","touched","handleSubmit","handleBlur","isSubmitting","Form","FormGroup","Label","for","Input","name","placeholder","value","onChange","invalid","FormFeedback","score","Button","StyledBookCard","styled","Card","Book","CardImg","top","width","src","alt","CardBody","CardText","CardLink","target","rel","href","Books","dropdownOpen","setOpen","hidden","setHidden","fluid","ButtonDropdown","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","item","StyledNavbarText","active","StyledInputGroup","InputGroup","changeFilter","search","activeFilter","style","padding","InputGroupAddon","addonType","InputGroupText","e","App","Boolean","window","location","hostname","initialState","reducer","action","rootReducer","combineReducers","reducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","createBrowserHistory","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.17ca6549.chunk.js","sourcesContent":["const navigation = {\r\n  left: [\r\n    {\r\n      title: \"HomePage\",\r\n      to: \"/\",\r\n    },\r\n    {\r\n      title: \"Read Books\",\r\n      to: \"/read-books\",\r\n    },\r\n  ],\r\n  right: [\r\n    {\r\n      title: \"+ Add Book\",\r\n      to: \"/add-book\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default navigation;\r\n","import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport \"./styles\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport navigation from \"../../navigation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\">\r\n        <NavbarBrand tag={Link} to=\"/\">\r\n          BookShelf App\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            {navigation.left.map((nav) => {\r\n              return (\r\n                <NavItem>\r\n                  <NavLink tag={Link} to={nav.to}>\r\n                    {nav.title}\r\n                  </NavLink>\r\n                </NavItem>\r\n              );\r\n            })}\r\n          </Nav>\r\n          {navigation.right.map((nav) => {\r\n            return (\r\n              <NavbarText>\r\n                <NavLink tag={Link} to={nav.to}>\r\n                  {nav.title}\r\n                </NavLink>\r\n              </NavbarText>\r\n            );\r\n          })}\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const categories = [\"JavaScript\", \"HTML\", \"CSS\", \"Python\", \"JAVA\"];\r\nexport const ratings = [1, 2, 3, 4, 5];\r\nexport const statuses = [\"Not read\", \"Read\"];\r\nexport const apiHost = \"https://5ebd6fc3ec34e900161922c7.mockapi.io/\";","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Books, FilterSortBar} from \"../../components\";\r\nimport {getBooks} from \"../../state/ducks/books/action\";\r\nimport {Container} from \"reactstrap\";\r\n\r\nclass Homepage extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.props.getBooks();\r\n  }\r\n\r\n  render(){\r\n    if(this.props.loading){\r\n      return <h1>BOOKS ARE LOADING...</h1>\r\n    }\r\n    const allBooks = this.props.books;\r\n    let filteredBooks = [];\r\n    /// Categorye gore filter\r\n    if(this.props.filter){\r\n      filteredBooks = allBooks.filter((book) => {\r\n        return book.category === this.props.filter\r\n      })\r\n    }else{\r\n      filteredBooks = allBooks;\r\n    }\r\n\r\n    /// Searchteme gore filter\r\n    if(this.props.searchTerm){\r\n      filteredBooks = filteredBooks.filter((book) => {\r\n        return ((book.title.toLowerCase().indexOf(this.props.searchTerm.toLowerCase()) > -1) || (book.author.toLowerCase().indexOf(this.props.searchTerm.toLowerCase()) > -1))\r\n      })\r\n    }\r\n\r\n    // Sorting\r\n    let sortedBooks = [];\r\n    if(this.props.sortTerm){\r\n      sortedBooks = [...filteredBooks].sort((book1, book2) => {\r\n         console.log(book1, book2, this.props.sortTerm);\r\n          return parseInt(book2[this.props.sortTerm]) - parseInt(book1[this.props.sortTerm])\r\n      });\r\n    }else{\r\n      sortedBooks = filteredBooks;\r\n    }\r\n\r\n\r\n    let books = \"\";\r\n    if(sortedBooks.length < 1){\r\n      books = <h2>NO BOOKS HERE</h2>\r\n    }else{\r\n      books = <Books items={sortedBooks}/>;\r\n    }\r\n    return <div>\r\n      <FilterSortBar />\r\n      <Container>\r\n        <div className=\"books-holder\">\r\n          {books}\r\n        </div>\r\n      </Container>\r\n    </div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    books: state.books.data,\r\n    loading: state.books.loading,\r\n    filter: state.books.filter,\r\n    searchTerm: state.books.searchTerm,\r\n    sortTerm: state.books.sortTerm\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getBooks\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);\r\n","import * as Actions from \"./types\";\r\nimport axios from \"axios\";\r\nimport {apiHost} from \"../../../constants\";\r\n\r\n\r\nexport const addBook = (values, history) => {\r\n    return dispatch => {\r\n        axios.post(`${apiHost}/books`, values).then((result) => {\r\n            dispatch({type: Actions.ADD_BOOK, payload: result.data})\r\n            history.push(\"/\");\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    };\r\n};\r\n\r\nexport const getBooks = () => {\r\n    return dispatch => {\r\n        dispatch({type: Actions.LOAD_BOOKS});\r\n        axios.get(`${apiHost}/books`).then((result) => {\r\n            dispatch({type: Actions.SET_BOOKS, payload: result.data})\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n};\r\n\r\nexport const setFilter = (filter) => {\r\n    return dispatch => {\r\n        dispatch({type: Actions.SET_FILTER, payload: filter})\r\n    }\r\n};\r\n\r\nexport const searchBooks = (searchTerm) => {\r\n    return dispatch => {\r\n        dispatch({type: Actions.SEARCH_BOOKS, payload: searchTerm});\r\n    }\r\n};\r\n\r\nexport const sortBooks = (sortTerm) => {\r\n    return dispatch => {\r\n        dispatch({type: Actions.SORT_BOOKS, payload: sortTerm});\r\n    }\r\n};\r\n\r\nexport const editBook = (id, values, history) => {\r\n    return dispatch => {\r\n        axios.put(`${apiHost}/books/${id}`, values).then((result) => {\r\n            console.log(result.data);\r\n            dispatch({type:Actions.EDIT_BOOK, payload: result.data})\r\n            //history.push(\"/\");\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n};","const SET_BOOKS = \"SET_BOOKS\";\r\nconst GET_BOOKS = \"GET_BOOKS\";\r\nconst ADD_BOOK  = \"ADD_BOOK\";\r\nconst LOAD_BOOKS = \"LOAD_BOOKS\";\r\nconst SET_FILTER = \"SET_FILTER\";\r\nconst SEARCH_BOOKS = \"SEARCH_BOOKS\";\r\nconst SORT_BOOKS = \"SORT_BOOKS\"\r\nconst EDIT_BOOK = \"EDIT_BOOKS\"\r\nexport {SET_BOOKS, GET_BOOKS, ADD_BOOK, LOAD_BOOKS, SET_FILTER, SEARCH_BOOKS, SORT_BOOKS,EDIT_BOOK}","import Homepage from \"./Homepage\";\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport { AddBookForm } from \"../../components\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport {apiHost} from \"../../constants\";\r\n\r\nclass AddBook extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            book: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const id = this.props.routerProps.match.params.id;\r\n        if(id){\r\n            axios.get(`${apiHost}/books/${id}`).then((result) => {\r\n                this.setState({\r\n                    book: result.data\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const isEdit = this.props.componentProps.isEdit;\r\n        const id = this.props.routerProps.match.params.id;\r\n        return (\r\n            <Row>\r\n                <Col xs={12}>\r\n                    {\r\n                        isEdit ? <h3>Edit book</h3>: <h3>Add a new book</h3>\r\n                    }\r\n                </Col>\r\n                <Col xs={12}>\r\n                    <AddBookForm isEdit={isEdit} book={this.state.book}/>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddBook;\r\n","import React from \"react\";\r\nimport { Homepage, AddBook } from \"./containers\";\r\n\r\nconst routes = [\r\n  {\r\n    title: \"Home Page\",\r\n    path: \"/\",\r\n    exact: true,\r\n    componentProps: {\r\n    },\r\n    component: Homepage,\r\n  },\r\n  {\r\n    title: \"Add Book\",\r\n    path: \"/add-book\",\r\n    exact: false,\r\n    componentProps: {\r\n    },\r\n    component: AddBook,\r\n  },\r\n  {\r\n    title: \"Edit Book\",\r\n    path: \"/edit-book/:id\",\r\n    exact: false,\r\n    componentProps: {\r\n      isEdit: true\r\n    },\r\n    component: AddBook\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport routes from \"../../routes\";\r\nimport { MainLayout } from \"../../components\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        {routes.map((route) => {\r\n          return (\r\n            <Route\r\n              path={route.path}\r\n              exact={route.exact}\r\n              component={(props) => {\r\n                const Comp = route.component;\r\n                return <MainLayout title={route.title} routerProps={props} componentProps={route.componentProps}>{Comp}</MainLayout>;\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Main from \"./Main\";\r\nimport \"./styles.js\";\r\n\r\nexport default Main;\r\n","import MainLayout from \"./MainLayout\";\r\n\r\nexport default MainLayout;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nclass MainLayout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const title = this.props.title;\r\n    document.title = title;\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const Children = this.props.children;\r\n    return (\r\n      <div>\r\n        <Children routerProps={this.props.routerProps} componentProps={this.props.componentProps}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainLayout;\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { Button, Form, FormGroup, Label, Input, FormText, FormFeedback } from \"reactstrap\";\r\nimport { Formik } from \"formik\";\r\nimport {categories, ratings, statuses} from \"../../constants\";\r\nimport {addBook,editBook} from \"../../state/ducks/books/action\";\r\nimport * as Yup from \"yup\";\r\nimport {withRouter} from \"react-router\";\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"Title is a required field\"),\r\n    author: Yup.string().required(\"Author is a required field\"),\r\n    review: Yup.string().min(30,'Too short! Must contain at least 30 characters')\r\n});\r\n\r\nconst AddBookForm = (props) => {\r\n    console.log(props);\r\n    let initialValues = {\r\n        title: \"\",\r\n        review:\"\",\r\n        url:\"\",\r\n        author: \"\",\r\n        category: \"\",\r\n        description: \"\",\r\n        rating: \"\",\r\n        imageUrl: \"\",\r\n        status: \"\"\r\n    };\r\n    if(props.isEdit && props.book){\r\n        initialValues = {...props.book};\r\n    }\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={(values) => {\r\n            console.log(values);\r\n            if(props.isEdit){\r\n              props.editBook(props.book.id, values, props.history);\r\n          }else{\r\n              props.addBook(values, props.history);\r\n          }\r\n        }}\r\n        enableReinitialize={true}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n          /* and other goodies */\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n              <Label for=\"title\">Title</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                id=\"title\"\r\n                placeholder=\"Name of the book\"\r\n                value={values.title}\r\n                onChange={handleChange}\r\n                invalid={errors.title}\r\n              />\r\n                {\r\n                    errors.title && <FormFeedback>{errors.title}</FormFeedback>\r\n                }\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"author\">Author</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"author\"\r\n                id=\"author\"\r\n                placeholder=\"Author of the book\"\r\n                value={values.author}\r\n                onChange={handleChange}\r\n                invalid={errors.author}\r\n              />\r\n                {\r\n                    errors.author && <FormFeedback>{errors.author}</FormFeedback>\r\n                }\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"imageUrl\">Image URL</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"imageUrl\"\r\n                id=\"imageUrl\"\r\n                placeholder=\"Image of the book\"\r\n                value={values.imageUrl}\r\n                onChange={handleChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleSelect\">Category</Label>\r\n              <Input type=\"select\" name=\"category\" id=\"category\" value={values.category} onChange={handleChange}>\r\n                {categories.map((category) => {\r\n                  return <option>{category}</option>;\r\n                })}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleText\">Description</Label>\r\n              <Input type=\"textarea\" name=\"description\" id=\"description\" value={values.description}\r\n                     onChange={handleChange}/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleSelect\">Rating</Label>\r\n              <Input type=\"select\" name=\"rating\" id=\"rating\" value={values.rating} onChange={handleChange}>\r\n                {ratings.map((score) => {\r\n                  return <option>{score}</option>;\r\n                })}\r\n              </Input>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleReview\">Review</Label>\r\n              <Input type=\"textarea\" name=\"review\" id=\"review\" value={values.review} onChange={handleChange} \r\n               invalid={errors.review}\r\n              />\r\n                {\r\n                    errors.review && <FormFeedback>{errors.review}</FormFeedback>\r\n                }\r\n              \r\n          \r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"exampleUrl\">Good Read Link</Label>\r\n              <Input type=\"url\" name=\"url\" id=\"url\" placeholder=\"Please enter url of Book\" value={values.url} onChange={handleChange} />\r\n  \r\n            </FormGroup>\r\n              <FormGroup>\r\n                  <Label for=\"exampleSelect\">Status</Label>\r\n                  <Input type=\"select\" name=\"status\" id=\"status\" value={values.status} onChange={handleChange}>\r\n                      {statuses.map((status) => {\r\n                          return <option>{status}</option>;\r\n                      })}\r\n                  </Input>\r\n              </FormGroup>\r\n              {\r\n                  props.isEdit ?\r\n                      <Button color=\"primary\">Save</Button> : <Button color=\"primary\">Add</Button>\r\n              }\r\n\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    addBook: addBook,\r\n    editBook: editBook\r\n};\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(AddBookForm));\r\n","import AddBookForm from \"./AddBookForm\";\r\n\r\nexport default AddBookForm;\r\n","import styled from \"styled-components\";\r\nimport {Card} from \"reactstrap\";\r\n\r\nexport const StyledBookCard = styled(Card)`\r\n        height: 530px;\r\n        .card-img-top {\r\n            height: 250px;\r\n        }\r\n        width:250px;\r\n        margin-top:20px;\r\n        margin-left: 20px;\r\n        margin-bottom: 20px; \r\n`;","import React from 'react';\r\nimport {Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle, Button, CardLink } from \"reactstrap\";\r\nimport {StyledBookCard} from \"./BookStyles\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Book = (props) => {\r\n    const {imageUrl, rating, title, id,review,url} = props;\r\n    return (\r\n            <StyledBookCard>\r\n                <CardImg top width=\"100%\" src={imageUrl} alt={title} />\r\n                <CardBody>\r\n                    <CardText>\r\n                        <strong>{`${rating} / 5`}</strong>\r\n                    </CardText>\r\n                    <CardText>\r\n                        {title}\r\n                    </CardText>\r\n                    <CardLink>\r\n                        Details\r\n                    </CardLink>\r\n                    <CardLink>\r\n                        <Link to={`/edit-book/${id}`}>Edit Book</Link>\r\n                    </CardLink>\r\n                    <CardText>\r\n                       Review: {review}\r\n                    </CardText>\r\n                    <CardLink>\r\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href ={url} > Good Read Link: </a>\r\n                    </CardLink>\r\n                </CardBody>\r\n            </StyledBookCard>\r\n    );\r\n};\r\n\r\nexport default Book;","import React,{ useState }  from 'react';\r\nimport Book from \"./Book\";\r\nimport {Col, Row,Container,ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem} from \"reactstrap\";\r\n\r\nconst Books = (props) => {\r\n \r\n    const [dropdownOpen, setOpen] = useState(false);\r\n    const toggle = () => setOpen(!dropdownOpen);\r\n\r\n    const [hidden, setHidden] = useState(true);\r\n    return (\r\n      \r\n        <Row>\r\n            <Container className=\"themed-container\" fluid={true}>\r\n                \r\n                <ButtonDropdown className=\"dropdown-menu-right\" isOpen={dropdownOpen} toggle={toggle}>\r\n                  <DropdownToggle  caret color=\"primary\">\r\n                        Page View\r\n                  </DropdownToggle>\r\n                    <DropdownMenu>\r\n                        <DropdownItem onClick={() => setHidden(false)}>List</DropdownItem>\r\n                        <DropdownItem onClick={() => setHidden(true) }>Multiple Listing</DropdownItem>\r\n                     \r\n                    </DropdownMenu>\r\n                    </ButtonDropdown>\r\n\r\n                   </Container>\r\n           \r\n            {\r\n                props.items.map((item) => {\r\n                    return <Col  xs= {!hidden ? 8 : 3 } >\r\n                        <Book {...item} />\r\n                    </Col>\r\n                })\r\n            }\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Books;","import styled from \"styled-components\";\r\nimport {NavbarText, InputGroup } from 'reactstrap';\r\n\r\nexport const StyledNavbarText = styled(NavbarText)`\r\n    margin-left: 15px;\r\n    color: ${props => props.active ? \"#FF8247\" : \"#035491\"};\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const StyledInputGroup = styled(InputGroup)`\r\n    display: inline-flex;\r\n    width: 50%;\r\n`;","import React from 'react';\r\nimport { Nav, Container, Row, Col, InputGroup, InputGroupAddon, InputGroupText, Input} from 'reactstrap';\r\nimport {connect} from \"react-redux\";\r\nimport {StyledNavbarText, StyledInputGroup} from \"./FilterSortBarStyles\";\r\nimport {categories} from \"../../constants\";\r\nimport {setFilter, searchBooks, sortBooks} from \"../../state/ducks/books/action\";\r\n\r\nconst FilterSortBar = (props) => {\r\n    return (\r\n        <div>\r\n                <Container fluid className=\"bg-white\" style={{padding: \"15px\"}}>\r\n                    <Row>\r\n                        <Col xs={6}>\r\n                            <Nav className=\"bg-white\">\r\n                                <StyledNavbarText><strong>Categories:</strong></StyledNavbarText>\r\n                                <StyledNavbarText active={!props.activeFilter} onClick={() => {\r\n                                    props.changeFilter(\"\");\r\n                                }}>All</StyledNavbarText>\r\n                                {\r\n                                    categories.map((category) => {\r\n                                        return <StyledNavbarText active={props.activeFilter === category} onClick={() => {\r\n                                            props.changeFilter(category);\r\n                                        }}>{category}</StyledNavbarText>\r\n                                    })\r\n                                }\r\n                            </Nav>\r\n                        </Col>\r\n\r\n                        <Col xs={6}>\r\n                            <StyledInputGroup>\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                    <InputGroupText>Search by name</InputGroupText>\r\n                                </InputGroupAddon>\r\n                                <Input onChange={(e) => {\r\n                                    //e.target.value\r\n                                    props.search(e.target.value)\r\n                                }}/>\r\n                            </StyledInputGroup>\r\n\r\n                            <StyledInputGroup>\r\n                                <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={(e) => {\r\n                                    props.sort(e.target.value);\r\n                                }}>\r\n                                    <option value=\"\">No Sort</option>\r\n                                    <option value=\"alphabetical\">Sort Alphabetical</option>\r\n                                    <option value=\"rating\">Sort by Rating</option>\r\n                                </Input>\r\n                            </StyledInputGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        activeFilter: state.books.filter\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  changeFilter: setFilter,\r\n  search: searchBooks,\r\n  sort: sortBooks\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterSortBar);","import React from \"react\";\r\nimport { Header, Main } from \"./components\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as Actions from \"./types\"\r\nimport { editBook } from \"./action\";\r\n\r\nconst initialState = {\r\n    data: [],\r\n    loading: false,\r\n    filter: \"\",\r\n    searchTerm: \"\",\r\n    sortTerm: \"\"\r\n\r\n};\r\n\r\nconst booksReducer = (state=initialState, action) => {\r\n  switch (action.type) {\r\n      case Actions.ADD_BOOK:\r\n          return {\r\n              ...state,\r\n              data: [...state.data, action.payload]\r\n          };\r\n      case Actions.SET_BOOKS:\r\n          return {\r\n              ...state,\r\n              data: action.payload,\r\n              loading: false\r\n          }\r\n      case Actions.LOAD_BOOKS:\r\n          return {\r\n              ...state,\r\n              loading: true\r\n          };\r\n      case Actions.SET_FILTER:\r\n          return {\r\n              ...state,\r\n              filter: action.payload\r\n          };\r\n      case Actions.SEARCH_BOOKS:\r\n          return {\r\n              ...state,\r\n              searchTerm: action.payload\r\n          };\r\n      case Actions.SORT_BOOKS:\r\n          return {\r\n              ...state,\r\n              sortTerm: action.payload\r\n          };\r\n      case Actions.EDIT_BOOK:\r\n          return {\r\n            ...state,\r\n            data: state.data.map((book) => {\r\n                if(book.id === action.payload.id){\r\n                    return action.payload;\r\n                }else{\r\n                    return book;\r\n                }\r\n            })\r\n          };\r\n      default:\r\n          return state;\r\n  }\r\n};\r\n\r\nexport default booksReducer;","import reducer from \"./reducers\";\r\n\r\nexport default reducer;","import * as reducers from \"./ducks\";\r\nimport {combineReducers, createStore, compose, applyMiddleware} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./state/store\";\r\nimport history from \"./history\";\r\n\r\nReactDOM.render(\r\n      <Provider store={store}>\r\n    <BrowserRouter history={history}>\r\n            <App />\r\n    </BrowserRouter>\r\n      </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}